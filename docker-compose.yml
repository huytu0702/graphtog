services:
  # PostgreSQL Database for user data
  postgres:
    image: pgvector/pgvector:pg16
    container_name: graphtog_postgres
    environment:
      POSTGRES_USER: graphtog_user
      POSTGRES_PASSWORD: graphtog_password
      POSTGRES_DB: graphtog_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U graphtog_user -d graphtog_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - graphtog_network

  # Neo4j Graph Database for knowledge graph
  neo4j:
    image: neo4j:5.13-enterprise
    container_name: graphtog_neo4j
    environment:
      NEO4J_AUTH: neo4j/graphtog_password
      NEO4J_ACCEPT_LICENSE_AGREEMENT: eval
      NEO4J_PLUGINS: '["apoc","graph-data-science"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*,gds.*
      NEO4J_dbms_security_procedures_whitelist: apoc.*,gds.*
    ports:
      - "7687:7687" # Bolt port
      - "7474:7474" # HTTP port
    volumes:
      - neo4j_data:/var/lib/neo4j/data
    healthcheck:
      test: [ "CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:7474" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - graphtog_network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: graphtog_redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - graphtog_network

  # Backend service using FastAPI - commented out to run via terminal
  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   container_name: graphtog_backend
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - DATABASE_URL=postgresql://graphtog_user:graphtog_password@postgres:5432/graphtog_db
  #     - NEO4J_URI=bolt://neo4j:7687
  #     - NEO4J_USER=neo4j
  #     - NEO4J_PASSWORD=graphtog_password
  #     - REDIS_URL=redis://redis:6379
  #     - GOOGLE_API_KEY=${GOOGLE_API_KEY}
  #   volumes:
  #     - ./backend/uploads:/app/uploads
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     neo4j:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   networks:
  #     - graphtog_network
  #   restart: on-failure

  # Frontend service using Next.js - commented out to run via terminal
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: graphtog_frontend
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - NEXT_PUBLIC_API_URL=http://localhost:8000
  #     - API_URL=http://backend:8000
  #     - DATABASE_URL=postgresql://graphtog_user:graphtog_password@postgres:5432/graphtog_db
  #     - NEXTAUTH_URL=http://localhost:3000
  #     - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-nextauth-secret-change-in-production}
  #   depends_on:
  #     - backend
  #   networks:
  #     - graphtog_network
  #   restart: on-failure

volumes:
  postgres_data:
    driver: local
  neo4j_data:
    driver: local
  redis_data:
    driver: local

networks:
  graphtog_network:
    driver: bridge
